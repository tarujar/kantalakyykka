// This file is auto-generated by @hey-api/openapi-ts

export type Game = {
    id: number | null;
    type_id: number;
    series_id: number;
    round: string | null;
    is_playoff: boolean | null;
    game_date: string;
    team_1_id: number;
    team_2_id: number;
    score_1_1: number;
    score_1_2: number;
    score_2_1: number;
    score_2_2: number;
};

export type GameCreate = {
    round: string | null;
    is_playoff?: boolean | null;
    series_id: number;
    game_date: string;
    team_1_id: number;
    team_2_id: number;
    score_1_1: number;
    score_1_2: number;
    score_2_1: number;
    score_2_2: number;
};

export type GameType = {
    id: number | null;
    name: string;
    max_players: number;
};

export type GameTypeCreate = {
    name: string;
    max_players: number;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type Player = {
    id: number | null;
    name: string;
};

export type PlayerCreate = {
    name: string;
    email: string;
};

export type Series = {
    id: number | null;
    name: string;
    max_players: number;
};

export type SeriesCreate = {
    name: string;
    season_type: 'summer' | 'winter';
    year: number;
    status?: ('upcoming' | 'ongoing' | 'completed') | null;
    registration_open?: boolean | null;
    game_type_id: number;
};

export type TeamInSeries = {
    series_id: number;
    team_name: string;
    team_abbreviation: string;
    contact_player_id: number;
    id?: number | null;
    created_at?: string | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type ListSeriesApiV1SeriesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/series/';
};

export type ListSeriesApiV1SeriesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Series>;
};

export type ListSeriesApiV1SeriesGetResponse = ListSeriesApiV1SeriesGetResponses[keyof ListSeriesApiV1SeriesGetResponses];

export type CreateSeriesApiV1SeriesPostData = {
    body: SeriesCreate;
    path?: never;
    query?: never;
    url: '/api/v1/series/';
};

export type CreateSeriesApiV1SeriesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSeriesApiV1SeriesPostError = CreateSeriesApiV1SeriesPostErrors[keyof CreateSeriesApiV1SeriesPostErrors];

export type CreateSeriesApiV1SeriesPostResponses = {
    /**
     * Successful Response
     */
    200: Series;
};

export type CreateSeriesApiV1SeriesPostResponse = CreateSeriesApiV1SeriesPostResponses[keyof CreateSeriesApiV1SeriesPostResponses];

export type GetSeriesApiV1SeriesSeriesIdGetData = {
    body?: never;
    path: {
        series_id: number;
    };
    query?: never;
    url: '/api/v1/series/{series_id}';
};

export type GetSeriesApiV1SeriesSeriesIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSeriesApiV1SeriesSeriesIdGetError = GetSeriesApiV1SeriesSeriesIdGetErrors[keyof GetSeriesApiV1SeriesSeriesIdGetErrors];

export type GetSeriesApiV1SeriesSeriesIdGetResponses = {
    /**
     * Successful Response
     */
    200: Series;
};

export type GetSeriesApiV1SeriesSeriesIdGetResponse = GetSeriesApiV1SeriesSeriesIdGetResponses[keyof GetSeriesApiV1SeriesSeriesIdGetResponses];

export type AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostData = {
    body: TeamInSeries;
    path: {
        series_id: number;
    };
    query?: never;
    url: '/api/v1/series/{series_id}/teams';
};

export type AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostError = AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostErrors[keyof AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostErrors];

export type AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostResponses = {
    /**
     * Successful Response
     */
    200: TeamInSeries;
};

export type AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostResponse = AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostResponses[keyof AddTeamToSeriesApiV1SeriesSeriesIdTeamsPostResponses];

export type AddPlayerToTeamApiV1SeriesSeriesIdTeamsTeamIdPlayersPostData = {
    body?: never;
    path: {
        series_id: number;
        team_id: number;
    };
    query: {
        player_id: number;
    };
    url: '/api/v1/series/{series_id}/teams/{team_id}/players';
};

export type AddPlayerToTeamApiV1SeriesSeriesIdTeamsTeamIdPlayersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AddPlayerToTeamApiV1SeriesSeriesIdTeamsTeamIdPlayersPostError = AddPlayerToTeamApiV1SeriesSeriesIdTeamsTeamIdPlayersPostErrors[keyof AddPlayerToTeamApiV1SeriesSeriesIdTeamsTeamIdPlayersPostErrors];

export type AddPlayerToTeamApiV1SeriesSeriesIdTeamsTeamIdPlayersPostResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ListGameTypesApiV1GameTypesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/game_types/';
};

export type ListGameTypesApiV1GameTypesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<GameType>;
};

export type ListGameTypesApiV1GameTypesGetResponse = ListGameTypesApiV1GameTypesGetResponses[keyof ListGameTypesApiV1GameTypesGetResponses];

export type CreateGameTypeApiV1GameTypesPostData = {
    body: GameTypeCreate;
    path?: never;
    query?: never;
    url: '/api/v1/game_types/';
};

export type CreateGameTypeApiV1GameTypesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateGameTypeApiV1GameTypesPostError = CreateGameTypeApiV1GameTypesPostErrors[keyof CreateGameTypeApiV1GameTypesPostErrors];

export type CreateGameTypeApiV1GameTypesPostResponses = {
    /**
     * Successful Response
     */
    200: GameType;
};

export type CreateGameTypeApiV1GameTypesPostResponse = CreateGameTypeApiV1GameTypesPostResponses[keyof CreateGameTypeApiV1GameTypesPostResponses];

export type DeleteGameTypeApiV1GameTypesGameTypeIdDeleteData = {
    body?: never;
    path: {
        game_type_id: number;
    };
    query?: never;
    url: '/api/v1/game_types/{game_type_id}';
};

export type DeleteGameTypeApiV1GameTypesGameTypeIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteGameTypeApiV1GameTypesGameTypeIdDeleteError = DeleteGameTypeApiV1GameTypesGameTypeIdDeleteErrors[keyof DeleteGameTypeApiV1GameTypesGameTypeIdDeleteErrors];

export type DeleteGameTypeApiV1GameTypesGameTypeIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteGameTypeApiV1GameTypesGameTypeIdDeleteResponse = DeleteGameTypeApiV1GameTypesGameTypeIdDeleteResponses[keyof DeleteGameTypeApiV1GameTypesGameTypeIdDeleteResponses];

export type GetGameTypeApiV1GameTypesGameTypeIdGetData = {
    body?: never;
    path: {
        game_type_id: number;
    };
    query?: never;
    url: '/api/v1/game_types/{game_type_id}';
};

export type GetGameTypeApiV1GameTypesGameTypeIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGameTypeApiV1GameTypesGameTypeIdGetError = GetGameTypeApiV1GameTypesGameTypeIdGetErrors[keyof GetGameTypeApiV1GameTypesGameTypeIdGetErrors];

export type GetGameTypeApiV1GameTypesGameTypeIdGetResponses = {
    /**
     * Successful Response
     */
    200: GameType;
};

export type GetGameTypeApiV1GameTypesGameTypeIdGetResponse = GetGameTypeApiV1GameTypesGameTypeIdGetResponses[keyof GetGameTypeApiV1GameTypesGameTypeIdGetResponses];

export type UpdateGameTypeApiV1GameTypesGameTypeIdPutData = {
    body: GameTypeCreate;
    path: {
        game_type_id: number;
    };
    query?: never;
    url: '/api/v1/game_types/{game_type_id}';
};

export type UpdateGameTypeApiV1GameTypesGameTypeIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateGameTypeApiV1GameTypesGameTypeIdPutError = UpdateGameTypeApiV1GameTypesGameTypeIdPutErrors[keyof UpdateGameTypeApiV1GameTypesGameTypeIdPutErrors];

export type UpdateGameTypeApiV1GameTypesGameTypeIdPutResponses = {
    /**
     * Successful Response
     */
    200: GameType;
};

export type UpdateGameTypeApiV1GameTypesGameTypeIdPutResponse = UpdateGameTypeApiV1GameTypesGameTypeIdPutResponses[keyof UpdateGameTypeApiV1GameTypesGameTypeIdPutResponses];

export type ListGamesApiV1GamesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/games/';
};

export type ListGamesApiV1GamesGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Game>;
};

export type ListGamesApiV1GamesGetResponse = ListGamesApiV1GamesGetResponses[keyof ListGamesApiV1GamesGetResponses];

export type CreateGameApiV1GamesPostData = {
    body: GameCreate;
    path?: never;
    query?: never;
    url: '/api/v1/games/';
};

export type CreateGameApiV1GamesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateGameApiV1GamesPostError = CreateGameApiV1GamesPostErrors[keyof CreateGameApiV1GamesPostErrors];

export type CreateGameApiV1GamesPostResponses = {
    /**
     * Successful Response
     */
    200: Game;
};

export type CreateGameApiV1GamesPostResponse = CreateGameApiV1GamesPostResponses[keyof CreateGameApiV1GamesPostResponses];

export type DeleteGameApiV1GamesGameIdDeleteData = {
    body?: never;
    path: {
        game_id: number;
    };
    query?: never;
    url: '/api/v1/games/{game_id}';
};

export type DeleteGameApiV1GamesGameIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteGameApiV1GamesGameIdDeleteError = DeleteGameApiV1GamesGameIdDeleteErrors[keyof DeleteGameApiV1GamesGameIdDeleteErrors];

export type DeleteGameApiV1GamesGameIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeleteGameApiV1GamesGameIdDeleteResponse = DeleteGameApiV1GamesGameIdDeleteResponses[keyof DeleteGameApiV1GamesGameIdDeleteResponses];

export type GetGameApiV1GamesGameIdGetData = {
    body?: never;
    path: {
        game_id: number;
    };
    query?: never;
    url: '/api/v1/games/{game_id}';
};

export type GetGameApiV1GamesGameIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGameApiV1GamesGameIdGetError = GetGameApiV1GamesGameIdGetErrors[keyof GetGameApiV1GamesGameIdGetErrors];

export type GetGameApiV1GamesGameIdGetResponses = {
    /**
     * Successful Response
     */
    200: Game;
};

export type GetGameApiV1GamesGameIdGetResponse = GetGameApiV1GamesGameIdGetResponses[keyof GetGameApiV1GamesGameIdGetResponses];

export type UpdateGameApiV1GamesGameIdPutData = {
    body: GameCreate;
    path: {
        game_id: number;
    };
    query?: never;
    url: '/api/v1/games/{game_id}';
};

export type UpdateGameApiV1GamesGameIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateGameApiV1GamesGameIdPutError = UpdateGameApiV1GamesGameIdPutErrors[keyof UpdateGameApiV1GamesGameIdPutErrors];

export type UpdateGameApiV1GamesGameIdPutResponses = {
    /**
     * Successful Response
     */
    200: Game;
};

export type UpdateGameApiV1GamesGameIdPutResponse = UpdateGameApiV1GamesGameIdPutResponses[keyof UpdateGameApiV1GamesGameIdPutResponses];

export type ListPlayersApiV1PlayersGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/players/';
};

export type ListPlayersApiV1PlayersGetResponses = {
    /**
     * Successful Response
     */
    200: Array<Player>;
};

export type ListPlayersApiV1PlayersGetResponse = ListPlayersApiV1PlayersGetResponses[keyof ListPlayersApiV1PlayersGetResponses];

export type CreatePlayerApiV1PlayersPostData = {
    body: PlayerCreate;
    path?: never;
    query?: never;
    url: '/api/v1/players/';
};

export type CreatePlayerApiV1PlayersPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreatePlayerApiV1PlayersPostError = CreatePlayerApiV1PlayersPostErrors[keyof CreatePlayerApiV1PlayersPostErrors];

export type CreatePlayerApiV1PlayersPostResponses = {
    /**
     * Successful Response
     */
    200: Player;
};

export type CreatePlayerApiV1PlayersPostResponse = CreatePlayerApiV1PlayersPostResponses[keyof CreatePlayerApiV1PlayersPostResponses];

export type DeletePlayerApiV1PlayersPlayerIdDeleteData = {
    body?: never;
    path: {
        player_id: number;
    };
    query?: never;
    url: '/api/v1/players/{player_id}';
};

export type DeletePlayerApiV1PlayersPlayerIdDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeletePlayerApiV1PlayersPlayerIdDeleteError = DeletePlayerApiV1PlayersPlayerIdDeleteErrors[keyof DeletePlayerApiV1PlayersPlayerIdDeleteErrors];

export type DeletePlayerApiV1PlayersPlayerIdDeleteResponses = {
    /**
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type DeletePlayerApiV1PlayersPlayerIdDeleteResponse = DeletePlayerApiV1PlayersPlayerIdDeleteResponses[keyof DeletePlayerApiV1PlayersPlayerIdDeleteResponses];

export type GetPlayerApiV1PlayersPlayerIdGetData = {
    body?: never;
    path: {
        player_id: number;
    };
    query?: never;
    url: '/api/v1/players/{player_id}';
};

export type GetPlayerApiV1PlayersPlayerIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPlayerApiV1PlayersPlayerIdGetError = GetPlayerApiV1PlayersPlayerIdGetErrors[keyof GetPlayerApiV1PlayersPlayerIdGetErrors];

export type GetPlayerApiV1PlayersPlayerIdGetResponses = {
    /**
     * Successful Response
     */
    200: Player;
};

export type GetPlayerApiV1PlayersPlayerIdGetResponse = GetPlayerApiV1PlayersPlayerIdGetResponses[keyof GetPlayerApiV1PlayersPlayerIdGetResponses];

export type UpdatePlayerApiV1PlayersPlayerIdPutData = {
    body: PlayerCreate;
    path: {
        player_id: number;
    };
    query?: never;
    url: '/api/v1/players/{player_id}';
};

export type UpdatePlayerApiV1PlayersPlayerIdPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdatePlayerApiV1PlayersPlayerIdPutError = UpdatePlayerApiV1PlayersPlayerIdPutErrors[keyof UpdatePlayerApiV1PlayersPlayerIdPutErrors];

export type UpdatePlayerApiV1PlayersPlayerIdPutResponses = {
    /**
     * Successful Response
     */
    200: Player;
};

export type UpdatePlayerApiV1PlayersPlayerIdPutResponse = UpdatePlayerApiV1PlayersPlayerIdPutResponses[keyof UpdatePlayerApiV1PlayersPlayerIdPutResponses];

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};